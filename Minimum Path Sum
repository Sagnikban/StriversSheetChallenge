#include <bits/stdc++.h> 
int dp[105][105];
int recurse(int i,int j,vector<vector<int>> &grid)
{
    if(i>=grid.size() || j>=grid[0].size())
    {
       return 1e9;
    }
    if(i==grid.size()-1 && j==grid[0].size()-1)
    return grid[i][j];

    if(dp[i][j]!=-1)
    return dp[i][j];

    int left=grid[i][j]+recurse(i,j+1,grid);
    int down=grid[i][j]+recurse(i+1,j,grid);

    return dp[i][j]=min(left,down);
}
int minSumPath(vector<vector<int>> &grid) {
    memset(dp,-1,sizeof(dp));
    recurse(0,0,grid);
}
