#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    vector<int>v;
    if(root==NULL)
    return v;
    queue<BinaryTreeNode<int> *>q;
    q.push(root);
    int f=1;
    while(!q.empty())
    {
        int s=q.size();
        vector<int>r(s);
        for(int i=0;i<s;i++)
        {
           BinaryTreeNode<int> * temp =q.front();
           q.pop();
           int ind=(f)?i:s-i-1;
           r[ind]=temp->data;

           if(temp->left)
           q.push(temp->left);

            if(temp->right)
           q.push(temp->right);

        }
        f=!f;
        for(auto it:r)
        v.push_back(it);
    }
    return v;
}

