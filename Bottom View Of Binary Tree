#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root){

     map<int,int>m;
     vector<int>ans;
     if(root==NULL)
     return ans;
        queue<pair<BinaryTreeNode<int> *,int>>q;
        q.push({root,0});
        while(!q.empty())
        {
            auto p=q.front();
            q.pop();
            BinaryTreeNode<int> *node=p.first;
            int y=p.second;
            
            m[y]=node->data;
            
            if(node->left)
            {
                q.push({node->left,y-1});
            }
            
            
            if(node->right)
            {
                q.push({node->right,y+1});
            }
        }
        
   
        for(auto it :m)
        ans.push_back(it.second);
        
        return ans;
    
}
