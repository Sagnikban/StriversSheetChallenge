#include<bits/stdc++.h>
void recurse(int i , int target , vector<int> &arr, vector<int> &ds, vector<vector<int>> &res){

	
	if(target == 0){
		res.push_back(ds);							
		return;  					
	}

        for (int j = i; j < arr.size(); j++) {
		
          if (j > i and arr[j] == arr[j - 1]) {
            continue; 
          }
          if (arr[j] > target) {
            break;
          }
          ds.push_back(arr[j]);

          recurse(j + 1, target-arr[j], arr, ds, res);
		  ds.pop_back(); 
        }
}
vector<vector<int>> combinationSum2(vector<int> &arr, int n, int k)
{
	sort(arr.begin(), arr.end());
	vector<int> v;
	vector<vector<int>> res;
	recurse(0,k, arr, v, res);
	
	return res;
}
