/**
 * Definition for singly-linked list.
 * class Node {
 * public:
 *     int data;
 *     Node *next;
 *     Node() : data(0), next(nullptr) {}
 *     Node(int x) : data(x), next(nullptr) {}
 *     Node(int x, Node *next) : data(x), next(next) {}
 * };
 */
Node* reverse(Node*head)
{

     Node* cur=head,*prev=NULL,*nxt=NULL;
     while(cur!=NULL)
     {
          nxt=cur->next;
          cur->next=prev;
          prev=cur;
          cur=nxt;
     }
     return prev;
}

Node *rotate(Node *head, int k) 
{

     // Write your code here.
     Node*dummy=new Node();
     dummy->next=head;
     Node* cur=dummy;
     int length=0;
     while(cur->next)
     {
         length++;
         cur=cur->next;
     }

     k=k%length;
     int first_half=length-k-1;
     cur=dummy->next;
     while(first_half>0 && cur!=NULL)
     {

          cur=cur->next;
          first_half--;

     }

     Node*temp=cur->next;
     cur->next=NULL;
     dummy->next=reverse(head);

     head->next=reverse(temp);
     return reverse(dummy->next);
}
